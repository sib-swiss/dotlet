// PAM80.java  

public class PAM80 extends ComparisonMatrix
{
  PAM80 ()
    {
      int tmp [][] =
	{
		{  4, -1, -4, -1, -1, -5,  0, -4, -2,-11, -4, -4, -3, -1,-11,  0, -2, -4,  1,  1,-11,  0, -8, -1, -5, -1,-11},
		{ -1,  5, -7,  5,  2, -7, -1,  0, -4,-11, -1, -6, -5,  4,-11, -3,  0, -3,  0, -1,-11, -4, -7, -2, -4,  2,-11},
		{ -4, -7,  9, -9, -9, -8, -6, -5, -4,-11, -9, -9, -8, -6,-11, -5, -9, -5, -1, -4,-11, -3,-10, -5, -2, -9,-11},
		{ -1,  5, -9,  6,  4, -9, -1, -1, -4,-11, -2, -7, -6,  3,-11, -4,  0, -5, -1, -2,-11, -5,-10, -3, -7,  2,-11},
		{ -1,  2, -9,  4,  6, -9, -2, -2, -3,-11, -2, -6, -4,  0,-11, -3,  2, -4, -2, -3,-11, -4,-11, -2, -6,  5,-11},
		{ -5, -7, -8, -9, -9,  8, -6, -3,  0,-11, -9,  0, -2, -5,-11, -7, -8, -6, -4, -5,-11, -4, -2, -5,  4, -8,-11},
		{  0, -1, -6, -1, -2, -6,  6, -5, -6,-11, -4, -7, -5, -1,-11, -3, -4, -6,  0, -2,-11, -3,-10, -3, -8, -2,-11},
		{ -4,  0, -5, -1, -2, -3, -5,  8, -5,-11, -3, -4, -5,  2,-11, -2,  2,  0, -3, -4,-11, -4, -4, -2, -1,  1,-11},
		{ -2, -4, -4, -4, -3,  0, -6, -5,  7,-11, -4,  1,  1, -3,-11, -5, -4, -3, -4, -1,-11,  3, -8, -2, -3, -4,-11},
		{-11,-11,-11,-11,-11,-11,-11,-11,-11,  1,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11},
		{ -4, -1, -9, -2, -2, -9, -4, -3, -4,-11,  6, -5,  0,  0,-11, -4, -1,  2, -2, -1,-11, -5, -7, -3, -6, -1,-11},
		{ -4, -6, -9, -7, -6,  0, -7, -4,  1,-11, -5,  6,  2, -5,-11, -4, -3, -5, -5, -4,-11,  0, -3, -3, -4, -4,-11},
		{ -3, -5, -8, -6, -4, -2, -5, -5,  1,-11,  0,  2,  9, -4,-11, -5, -2, -2, -3, -2,-11,  1, -7, -2, -6, -3,-11},
		{ -1,  4, -6,  3,  0, -5, -1,  2, -3,-11,  0, -5, -4,  5,-11, -3, -1, -2,  1,  0,-11, -4, -5, -1, -3,  0,-11},
		{-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,  1,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11},
		{  0, -3, -5, -4, -3, -7, -3, -2, -5,-11, -4, -4, -5, -3,-11,  7, -1, -2,  0, -2,-11, -3, -9, -2, -8, -2,-11},
		{ -2,  0, -9,  0,  2, -8, -4,  2, -4,-11, -1, -3, -2, -1,-11, -1,  7,  0, -3, -3,-11, -4, -8, -2, -7,  5,-11},
		{ -4, -3, -5, -5, -4, -6, -6,  0, -3,-11,  2, -5, -2, -2,-11, -2,  0,  7, -1, -3,-11, -5,  0, -3, -7, -1,-11},
		{  1,  0, -1, -1, -2, -4,  0, -3, -4,-11, -2, -5, -3,  1,-11,  0, -3, -1,  4,  2,-11, -3, -3, -1, -4, -2,-11},
		{  1, -1, -4, -2, -3, -5, -2, -4, -1,-11, -1, -4, -2,  0,-11, -2, -3, -3,  2,  5,-11, -1, -8, -1, -4, -3,-11},
		{-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,  1,-11,-11,-11,-11,-11,-11},
		{  0, -4, -3, -5, -4, -4, -3, -4,  3,-11, -5,  0,  1, -4,-11, -3, -4, -5, -3, -1,-11,  6,-10, -2, -5, -4,-11},
		{ -8, -7,-10,-10,-11, -2,-10, -4, -8,-11, -7, -3, -7, -5,-11, -9, -8,  0, -3, -8,-11,-10, 13, -7, -2, -9,-11},
		{ -1, -2, -5, -3, -2, -5, -3, -2, -2,-11, -3, -3, -2, -1,-11, -2, -2, -3, -1, -1,-11, -2, -7, -3, -4, -2,-11},
		{ -5, -4, -2, -7, -6,  4, -8, -1, -3,-11, -6, -4, -6, -3,-11, -8, -7, -7, -4, -4,-11, -5, -2, -4,  9, -6,-11},
		{ -1,  2, -9,  2,  5, -8, -2,  1, -4,-11, -1, -4, -3,  0,-11, -2,  5, -1, -2, -3,-11, -4, -9, -2, -6,  5,-11},
		{-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,  1},
	};
	    
	matrix = tmp;
    }
    
    public int score (char hc, char vc)
    {
	try
	{
	   return matrix [ hc - 'A' ][ vc - 'A' ];
	}   
	catch (ArrayIndexOutOfBoundsException e)
        {
	   String s = e.getMessage ();
		System.out.println ("Unknown symbol: " + (Integer.parseInt (s) + 65));

	   return matrix [ 'J' - 'A' ][ 'J' - 'A' ]; // by default, return unknown codon
	}
    }
}
	    
