// Blosum100.java  

public class Blosum100 extends ComparisonMatrix
{
  Blosum100 ()
    {
      int tmp [][] =
	{
		{  8, -4, -2, -5, -3, -5, -1, -4, -4,-10, -2, -4, -3, -4,-10, -2, -2, -3,  1, -1,-10, -2, -6, -2, -5, -2,-10},
		{ -4,  6, -7,  6,  0, -7, -3, -2, -8,-10, -2, -8, -7,  5,-10, -5, -2, -4, -1, -2,-10, -7, -9, -4, -6,  0,-10},
		{ -2, -7, 14, -8, -9, -4, -7, -8, -3,-10, -8, -5, -4, -5,-10, -8, -7, -8, -3, -3,-10, -3, -7, -5, -6, -8,-10},
		{ -5,  6, -8, 10,  2, -8, -4, -3, -8,-10, -3, -8, -8,  1,-10, -5, -2, -5, -2, -4,-10, -8,-10, -4, -7,  0,-10},
		{ -3,  0, -9,  2, 10, -8, -6, -2, -7,-10,  0, -7, -5, -2,-10, -4,  2, -2, -2, -3,-10, -5, -8, -3, -7,  7,-10},
		{ -5, -7, -4, -8, -8, 11, -8, -4, -2,-10, -6,  0, -1, -7,-10, -7, -6, -6, -5, -5,-10, -3,  0, -4,  4, -7,-10},
		{ -1, -3, -7, -4, -6, -8,  9, -6, -9,-10, -5, -8, -7, -2,-10, -6, -5, -6, -2, -5,-10, -8, -7, -4, -8, -5,-10},
		{ -4, -2, -8, -3, -2, -4, -6, 13, -7,-10, -3, -6, -5,  0,-10, -5,  1, -1, -3, -4,-10, -7, -5, -4,  1, -1,-10},
		{ -4, -8, -3, -8, -7, -2, -9, -7,  8,-10, -6,  2,  1, -7,-10, -7, -6, -7, -5, -3,-10,  4, -6, -3, -4, -7,-10},
		{-10,-10,-10,-10,-10,-10,-10,-10,-10,  1,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10},
		{ -2, -2, -8, -3,  0, -6, -5, -3, -6,-10, 10, -6, -4, -1,-10, -3,  2,  3, -2, -3,-10, -5, -8, -3, -5,  0,-10},
		{ -4, -8, -5, -8, -7,  0, -8, -6,  2,-10, -6,  8,  3, -7,-10, -7, -5, -6, -6, -4,-10,  0, -5, -3, -4, -6,-10},
		{ -3, -7, -4, -8, -5, -1, -7, -5,  1,-10, -4,  3, 12, -5,-10, -5, -2, -4, -4, -2,-10,  0, -4, -3, -5, -4,-10},
		{ -4,  5, -5,  1, -2, -7, -2,  0, -7,-10, -1, -7, -5, 11,-10, -5, -1, -2,  0, -1,-10, -7, -8, -3, -5, -2,-10},
		{-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,  1,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10},
		{ -2, -5, -8, -5, -4, -7, -6, -5, -7,-10, -3, -7, -5, -5,-10, 12, -4, -5, -3, -4,-10, -6, -8, -4, -7, -4,-10},
		{ -2, -2, -7, -2,  2, -6, -5,  1, -6,-10,  2, -5, -2, -1,-10, -4, 11,  0, -2, -3,-10, -5, -5, -2, -4,  5,-10},
		{ -3, -4, -8, -5, -2, -6, -6, -1, -7,-10,  3, -6, -4, -2,-10, -5,  0, 10, -3, -3,-10, -6, -7, -3, -5, -1,-10},
		{  1, -1, -3, -2, -2, -5, -2, -3, -5,-10, -2, -6, -4,  0,-10, -3, -2, -3,  9,  2,-10, -4, -7, -2, -5, -2,-10},
		{ -1, -2, -3, -4, -3, -5, -5, -4, -3,-10, -3, -4, -2, -1,-10, -4, -3, -3,  2,  9,-10, -1, -7, -2, -5, -3,-10},
		{-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,  1,-10,-10,-10,-10,-10,-10},
		{ -2, -7, -3, -8, -5, -3, -8, -7,  4,-10, -5,  0,  0, -7,-10, -6, -5, -6, -4, -1,-10,  8, -5, -3, -5, -5,-10},
		{ -6, -9, -7,-10, -8,  0, -7, -5, -6,-10, -8, -5, -4, -8,-10, -8, -5, -7, -7, -7,-10, -5, 17, -6,  2, -7,-10},
		{ -2, -4, -5, -4, -3, -4, -4, -4, -3,-10, -3, -3, -3, -3,-10, -4, -2, -3, -2, -2,-10, -3, -6, -3, -4, -2,-10},
		{ -5, -6, -6, -7, -7,  4, -8,  1, -4,-10, -5, -4, -5, -5,-10, -7, -4, -5, -5, -5,-10, -5,  2, -4, 12, -6,-10},
		{ -2,  0, -8,  0,  7, -7, -5, -1, -7,-10,  0, -6, -4, -2,-10, -4,  5, -1, -2, -3,-10, -5, -7, -2, -6,  6,-10},
		{-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,  1},
	};
	    
	matrix = tmp;
    }
    
    public int score (char hc, char vc)
    {
	try
	{
	   return matrix [ hc - 'A' ][ vc - 'A' ];
	}   
	catch (ArrayIndexOutOfBoundsException e)
        {
	   String s = e.getMessage ();
		System.out.println ("Unknown symbol: " + (Integer.parseInt (s) + 65));

	   return matrix [ 'J' - 'A' ][ 'J' - 'A' ]; // by default, return unknown codon
	}
    }
}
	    
