// PAM200.java  

public class PAM200 extends ComparisonMatrix
{
  PAM200 ()
    {
      int tmp [][] =
	{
		{  3,  0, -3,  0,  0, -4,  1, -2, -1, -9, -2, -2, -2,  0, -9,  1, -1, -2,  1,  1, -9,  0, -7,  0, -4,  0, -9},
		{  0,  3, -5,  4,  3, -6,  0,  1, -3, -9,  0, -4, -3,  3, -9, -1,  1, -1,  1,  0, -9, -3, -6, -1, -4,  2, -9},
		{ -3, -5, 12, -6, -7, -6, -4, -4, -3, -9, -7, -7, -6, -5, -9, -4, -7, -4,  0, -3, -9, -2, -9, -4,  0, -7, -9},
		{  0,  4, -6,  5,  4, -7,  0,  0, -3, -9,  0, -5, -4,  3, -9, -2,  2, -2,  0,  0, -9, -3, -8, -1, -5,  3, -9},
		{  0,  3, -7,  4,  5, -7,  0,  0, -3, -9,  0, -4, -3,  2, -9, -1,  3, -2,  0, -1, -9, -2, -9, -1, -5,  4, -9},
		{ -4, -6, -6, -7, -7, 10, -6, -2,  1, -9, -7,  2,  0, -4, -9, -6, -6, -5, -4, -4, -9, -2,  0, -3,  7, -6, -9},
		{  1,  0, -4,  0,  0, -6,  6, -3, -3, -9, -2, -5, -4,  0, -9, -1, -2, -4,  1,  0, -9, -2, -8, -1, -6, -1, -9},
		{ -2,  1, -4,  0,  0, -2, -3,  8, -3, -9, -1, -3, -3,  2, -9, -1,  3,  2, -1, -2, -9, -3, -3, -1,  0,  2, -9},
		{ -1, -3, -3, -3, -3,  1, -3, -3,  6, -9, -2,  2,  2, -2, -9, -3, -3, -2, -2,  0, -9,  4, -6, -1, -2, -3, -9},
		{ -9, -9, -9, -9, -9, -9, -9, -9, -9,  1, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9},
		{ -2,  0, -7,  0,  0, -7, -2, -1, -2, -9,  6, -4,  1,  1, -9, -2,  1,  4,  0,  0, -9, -3, -4, -1, -5,  0, -9},
		{ -2, -4, -7, -5, -4,  2, -5, -3,  2, -9, -4,  7,  4, -4, -9, -3, -2, -4, -4, -2, -9,  2, -2, -2, -2, -3, -9},
		{ -2, -3, -6, -4, -3,  0, -4, -3,  2, -9,  1,  4,  8, -2, -9, -3, -1, -1, -2, -1, -9,  2, -5, -1, -3, -2, -9},
		{  0,  3, -5,  3,  2, -4,  0,  2, -2, -9,  1, -4, -2,  3, -9, -1,  1,  0,  1,  0, -9, -2, -5,  0, -2,  1, -9},
		{ -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9,  1, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9},
		{  1, -1, -4, -2, -1, -6, -1, -1, -3, -9, -2, -3, -3, -1, -9,  7,  0,  0,  1,  0, -9, -2, -7, -1, -6, -1, -9},
		{ -1,  1, -7,  2,  3, -6, -2,  3, -3, -9,  1, -2, -1,  1, -9,  0,  5,  1, -1, -1, -9, -3, -6, -1, -5,  4, -9},
		{ -2, -1, -4, -2, -2, -5, -4,  2, -2, -9,  4, -4, -1,  0, -9,  0,  1,  7, -1, -1, -9, -3,  2, -1, -5,  0, -9},
		{  1,  1,  0,  0,  0, -4,  1, -1, -2, -9,  0, -4, -2,  1, -9,  1, -1, -1,  2,  2, -9, -1, -3,  0, -3, -1, -9},
		{  1,  0, -3,  0, -1, -4,  0, -2,  0, -9,  0, -2, -1,  0, -9,  0, -1, -1,  2,  4, -9,  0, -6,  0, -3, -1, -9},
		{ -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9,  1, -9, -9, -9, -9, -9, -9},
		{  0, -3, -2, -3, -2, -2, -2, -3,  4, -9, -3,  2,  2, -2, -9, -2, -3, -3, -1,  0, -9,  5, -8, -1, -3, -2, -9},
		{ -7, -6, -9, -8, -9,  0, -8, -3, -6, -9, -4, -2, -5, -5, -9, -7, -6,  2, -3, -6, -9, -8, 18, -5, -1, -7, -9},
		{  0, -1, -4, -1, -1, -3, -1, -1, -1, -9, -1, -2, -1,  0, -9, -1, -1, -1,  0,  0, -9, -1, -5, -1, -3, -1, -9},
		{ -4, -4,  0, -5, -5,  7, -6,  0, -2, -9, -5, -2, -3, -2, -9, -6, -5, -5, -3, -3, -9, -3, -1, -3, 11, -5, -9},
		{  0,  2, -7,  3,  4, -6, -1,  2, -3, -9,  0, -3, -2,  1, -9, -1,  4,  0, -1, -1, -9, -2, -7, -1, -5,  4, -9},
		{ -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9,  1},
	};
	    
	matrix = tmp;
    }
    
    public int score (char hc, char vc)
    {
	try
	{
	   return matrix [ hc - 'A' ][ vc - 'A' ];
	}   
	catch (ArrayIndexOutOfBoundsException e)
        {
	   String s = e.getMessage ();
		System.out.println ("Unknown symbol: " + (Integer.parseInt (s) + 65));

	   return matrix [ 'J' - 'A' ][ 'J' - 'A' ]; // by default, return unknown codon
	}
    }
}
	    
